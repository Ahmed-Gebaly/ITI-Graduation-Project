#================================== Nagios Server =======================================
- name: nagios server installation
  hosts: nagios
  tags: nagios-server
  tasks:

   - name: Create nagios group
     group:
      name: nagcmd
      state: present

   - name: Create nagios user
     user:
      name: nagios
      password: $1$2lDCWevR$SdX6VSEYKuEGXwO3JlIFe/
      groups: nagcmd
      append: yes

   - name: Add nagios to sudoers
     lineinfile:
      path: /etc/sudoers
      line: "nagios ALL=(ALL) NOPASSWD: ALL"

   - name: Put SELinux in permissive mode
     selinux:
      policy: targeted
      state: permissive

   - name: Install epel-release
     yum:
      name: epel-release
      state: latest

   - name: Install packages
     yum:
      name: "{{item}}"
      enablerepo: "epel"
      state: latest
     loop:
      - httpd
      - firewalld
      - php
      - php-mysql
      - gcc
      - glibc
      - glibc-common
      - gd
      - gd-devel
      - make
      - net-snmp
      - openssl-devel
      - xinetd
      - unzip
      - perl
      - git
      - mailx
      - python-pip
      - sshpass
      - sysstat
      - iotop

   - name: Install python dependency
     pip:
      name: passlib

   - name: Enable service httpd, and not touch the state
     service:
      name: "{{item}}"
      state: started
      enabled: yes
     loop:
      - httpd
      - firewalld

   - name: Open firewall ports
     firewalld:
      port: "{{item}}"
      permanent: yes
      state: enabled
      immediate: yes
     loop:
      - 161/tcp
      - 161/udp
      - 162/tcp
      - 162/udp
      - 80/tcp
      - 443/tcp
      - 5666/tcp
      - 22/tcp
      - 25/tcp
      - 25/udp
      - 465/tcp
      - 587/tcp

   - name: Add apache user nagcmd group
     user:
      name: apache
      groups: nagcmd

   - name: Download nagios packages from GitHub
     git:
      repo: 'https://github.com/Ahmed-Gebaly/iTi-SystemAdmin40.git'
      dest: /home/nagios/iTi-SystemAdmin40
      clone: yes
      update: yes
     become_user: nagios

   - name: Unarchive nagios packages
     unarchive:
      src: "{{item}}"
      dest: /home/nagios/
      remote_src: yes
     loop:
      - /home/nagios/iTi-SystemAdmin40/Nagios-Server-Packages/nagios-4.4.6.tar.gz
      - /home/nagios/iTi-SystemAdmin40/Nagios-Server-Packages/nagios-plugins-2.3.3.tar.gz
      - /home/nagios/iTi-SystemAdmin40/Nagios-Server-Packages/nrpe-4.0.2.tar.gz
      - /home/nagios/iTi-SystemAdmin40/eventhandlers.tar.gz
     become_user: nagios

   - name: Install Nagios
     command: "{{item}}"
     args:
      chdir: /home/nagios/nagios-4.4.6
     loop:
      - ./configure --with-nagios-group=nagios --with-command-group=nagcmd
      - make all
     run_once: true
     become_user: nagios

   - name: Nagios make
     command: "{{item}}"
     args:
      chdir: /home/nagios/nagios-4.4.6
     loop:
      - make install
      - make install-commandmode
      - make install-init
      - make install-config
      - make install-webconf
     run_once: true

   - name: Install nagios plugins
     command: "{{item}}"
     args:
      chdir: /home/nagios/nagios-plugins-2.3.3
     loop:
      - ./configure --with-nagios-user=nagios --with-nagios-group=nagios --with-openssl
      - make
     run_once: true
     become_user: nagios

   - name: Nagios plugin make
     command: make install
     args:
      chdir: /home/nagios/nagios-plugins-2.3.3
     run_once: true

   - name: Install NRPE
     command: "{{item}}"
     args:
      chdir: /home/nagios/nrpe-4.0.2
     loop:
      - ./configure --enable-command-args --with-nagios-user=nagios --with-nagios-group=nagios --with-ssl=/usr/bin/openssl --with-ssl-lib=/usr/lib/x86_64-linux-gnu
      - make all
     run_once: true
     become_user: nagios

   - name: Nagios NRPE make
     command: "{{item}}"
     args:
      chdir: /home/nagios/nrpe-4.0.2
     loop:
      - make install
      - make install-inetd
     run_once: true    
 
   - name: Add nagios server to nrpe
     lineinfile:
      path: /etc/xinetd.d/nrpe
      regexp: '^    only_from       = 127.0.0.1 '
      line: "    only_from       = 127.0.0.1  {{inventory_hostname}}"

   - name: Restart xinted service
     service:
      name: xinetd
      state: restarted

   - name: Create htpasswd to Nagios Admin
     htpasswd:
      path: /usr/local/nagios/etc/htpasswd.users
      name: nagiosadmin
      password: 123456
      
   - name: Copy eventhandlers directory
     copy:
      src: /home/nagios/eventhandlers
      dest: /usr/local/nagios/libexec
      force: yes
      remote_src: yes
      owner: nagios
      group: nagios

   - name: create /usr/local/nagios/etc/servers directory
     file:
      path: /usr/local/nagios/etc/servers
      state: directory


   - name: uncomment /usr/local/nagios/etc/servers
     replace:
      path: /usr/local/nagios/etc/nagios.cfg
      regexp: '#cfg_dir=/usr/local/nagios/etc/servers'
      replace: 'cfg_dir=/usr/local/nagios/etc/servers'
    
   - name: Set Host Global Event Handler
     replace:
      path: /usr/local/nagios/etc/nagios.cfg
      regexp: '#global_host_event_handler=somecommand'
      replace: 'global_host_event_handler=host_ticket'
     tags: qq
   - name: Set Service Global Event Handler
     replace:
      path: /usr/local/nagios/etc/nagios.cfg
      regexp: '#global_service_event_handler=somecommand'
      replace: 'global_service_event_handler=service_ticket'
     tags: qq
   - name: Uncomment eventhandlers variable
     lineinfile:
      path: /usr/local/nagios/etc/resource.cfg
      regexp: '/usr/local/nagios/libexec/eventhandlers$'
      line: '$USER2$=/usr/local/nagios/libexec/eventhandlers'

   - name: node1.app1.project.com
     template:
      src: "{{ item }}"
      dest: /usr/local/nagios/etc/servers/{{ item }}
      owner: nagios
      group: nagios
      mode: 0664
     loop:
      - nagios-app1.cfg
      - nagios-app2.cfg
      - nagios-db.cfg
      - nagios-lb.cfg
      - nagios-ansible.cfg

   - name: Monitor nagios
     template:
      src: nagios-nagios.cfg
      dest: /usr/local/nagios/etc/objects/localhost.cfg
      owner: nagios
      group: nagios
      mode: 0664

   - name: configuring nagios command file
     template:
      src: nagios-commands.cfg.j2
      dest: /usr/local/nagios/etc/objects/commands.cfg
      
   - name: configuring nagios contant file
     template:
      src: nagios-contacts.cfg.j2
      dest: /usr/local/nagios/etc/objects/contacts.cfg

   - name: configuring nagios templates file
     template:
      src: nagios-templates.cfg.j2
      dest: /usr/local/nagios/etc/objects/templates.cfg

   - name: Add nagios plugins
     template:
      src: "{{ item }}"
      dest: /usr/local/nagios/libexec/{{ item }}
      owner: nagios
      group: nagios
      mode: 0755
     loop:
      - check_mem
      - check_iostat

   - name: Restart Nagios Services
     command: "{{item}}"
     loop:
      - systemctl daemon-reload
      - systemctl start nagios
      - systemctl enable nagios
      - systemctl restart httpd

   - name: Prepare Google SMTP mail configuration
     lineinfile:
      path: /etc/mail.rc
      line: "{{item}}"
     loop:
      - "set smtp=smtps://smtp.gmail.com:465"
      - "set smtp-auth=login"
      - "set smtp-auth-user=iti.project.2020@gmail.com"
      - "set smtp-auth-password=@itisa40"
      - "set ssl-verify=ignore"
      - "set nss-config-dir=/etc/pki/nssdb/"

- name: nagios host playbook
  hosts: all
  tags: nagios-server
  tasks:

   - name: Add mem.py command
     template:
      src: mem.py-command.j2
      dest: /usr/bin/mem.py
      owner: root
      group: root
      mode: 0755

#======================================== Nagios Centos Host-======================================================================
- name: nagios host playbook
  hosts: nagios_centos
  tags: nagios-centos
  tasks:
   
   - name: installing packages
     yum:
      name: epel-release
      state: latest

   - name: installing packages
     yum:
      name: "{{item}}"
      enablerepo: "epel"
      state: latest
     loop:
      - nrpe
      - nagios-plugins-all
      - sysstat
      - bc
      - git
      - iotop

   - name: Put SELinux in permissive mode
     selinux:
      policy: targeted
      state: permissive

   - name: firewall configs
     firewalld:
      port: 5666/tcp
      permanent: yes
      state: enabled
      immediate: yes

   - name: add nagios to sudoers
     lineinfile:
      path: /etc/sudoers
      line: "{{ item }}"
     loop:
      - "nrpe ALL=(ALL) NOPASSWD: /usr/bin/systemctl"
      - "nagios ALL=(ALL) NOPASSWD: /usr/bin/systemctl"

   - name: Add reconfigure nrpe.cfg 
     template:
      src: centos-nrpe.cfg.j2
      dest: /etc/nagios/nrpe.cfg

   - name: Set Service Global Event Handler
     replace:
      path: /etc/nagios/nrpe.cfg
      regexp: 'allowed_hosts=127.0.0.1,::1'
      replace: 'allowed_hosts=127.0.0.1,::1,10.114.0.3'

   - name: Set Service Global Event Handler
     replace:
      path: /etc/nagios/nrpe.cfg
      regexp: '/plugins/check_iostat -d vda'
      replace: '/plugins/check_iostat -d vda'

   - name: Set Service Global Event Handler
     replace:
      path: /etc/nagios/nrpe.cfg
      regexp: '-p /dev/vda1 -u GB'
      replace: '-p /dev/vda1 -u GB'

   - name: Add nagios plugins
     template:
      src: "{{ item }}"
      dest: /usr/lib64/nagios/plugins/{{ item }}
      mode: 0755
     loop:
      - check_mem
      - check_iostat

   - name: Restart nrpe service
     service:
      name: nrpe
      state: started
      enabled: yes

#========================================== Nagios Ubuntu Host ==============================================
- name: Install Nagios on ubuntu
  hosts: nagios_ubuntu
  tags: nagios-ubuntu
  tasks:

   - name: install needed pacakges
     apt:
      name: "{{item}}"
      state: latest
      update_cache: yes
     loop:
      - nagios-plugins 
      - nagios-nrpe-server 
      - sysstat  
      - bc 
      - iotop
     
   - name: Allow ports
     ufw:
      rule: allow
      state: enabled
      port: 5666

   - name: add nagios to sudoers
     lineinfile:
      path: /etc/sudoers
      line: "nagios ALL=(ALL) NOPASSWD: /usr/sbin/service"

   - name: Add NRPE configuration
     template:
      src: ubuntu-nrpe.cfg.j2
      dest: /etc/nagios/nrpe.cfg

   - name: Set Service Global Event Handler
     replace:
      path: /etc/nagios/nrpe.cfg
      regexp: 'allowed_hosts=127.0.0.1,::1'
      replace: 'allowed_hosts=127.0.0.1,::1,10.114.0.3'

   - name: Set Service Global Event Handler
     replace:
      path: /etc/nagios/nrpe.cfg
      regexp: '/plugins/check_iostat -d vda'
      replace: '/plugins/check_iostat -d vda'

   - name: Set Service Global Event Handler
     replace:
      path: /etc/nagios/nrpe.cfg
      regexp: '-p /dev/vda1 -u GB'
      replace: '-p /dev/vda1 -u GB'

   - name: Add nagios plugins
     template:
      src: "{{ item }}"
      dest: /usr/lib/nagios/plugins/{{ item }}
      mode: 0755
     loop:
      - check_mem
      - check_iostat

   - name: Restart nrpe service
     service:
      name: nagios-nrpe-server
      state: started
      enabled: yes
